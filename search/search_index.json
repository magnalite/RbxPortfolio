{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Who am I? Hi there, I'm magnalite (Jonathan Glossop, 21). My github can be found here: https://github.com/wreng Currently I'm doing year 3 of 4 of the MEng Computer Science course at the University of Southampton. I have been involved with Roblox since 2008, infact Roblox is the very reason I decided to choose computer science! Throughout the years I have done many projects both with Roblox and elsewhere. Click the links on the left to see the projects I am most proud of, my most recent one is Pioneers. What can I do? My strongest area is programming, specifically backend programming, however I have experience with every aspect of Roblox development. I use agile principles to manage the development of my projects as well as other tools to assist, such as Adobe XD for UI work and VSCode/Rojo/Git to manage source control. I have experience using every part of the Roblox API, can use blender to create 3D models as well as animate them, can create smooth friendly UI/UX, I understand the demographic of Roblox, am a top contributor on the developer forum, have helped many other developers including involvement with Scripting Helpers, I've worked in teams as well as professionally and I get on well with many other top Roblox developers.","title":"Home"},{"location":"#who-am-i","text":"Hi there, I'm magnalite (Jonathan Glossop, 21). My github can be found here: https://github.com/wreng Currently I'm doing year 3 of 4 of the MEng Computer Science course at the University of Southampton. I have been involved with Roblox since 2008, infact Roblox is the very reason I decided to choose computer science! Throughout the years I have done many projects both with Roblox and elsewhere. Click the links on the left to see the projects I am most proud of, my most recent one is Pioneers.","title":"Who am I?"},{"location":"#what-can-i-do","text":"My strongest area is programming, specifically backend programming, however I have experience with every aspect of Roblox development. I use agile principles to manage the development of my projects as well as other tools to assist, such as Adobe XD for UI work and VSCode/Rojo/Git to manage source control. I have experience using every part of the Roblox API, can use blender to create 3D models as well as animate them, can create smooth friendly UI/UX, I understand the demographic of Roblox, am a top contributor on the developer forum, have helped many other developers including involvement with Scripting Helpers, I've worked in teams as well as professionally and I get on well with many other top Roblox developers.","title":"What can I do?"},{"location":"RobloxECS/","text":"RobloxECS An Entity-Component-System framework I created for Roblox. The code can be found here . Using tags/CollectionService I allow Roblox objects to be assigned with componenets. This framework was designed to be minimalistic, fast and easy to use. I stopped work on it due to other commitments. Here I demonstrate it's ability to reload code during live gameplay, enabling rapid code testing and debugging.","title":"RobloxECS"},{"location":"RobloxECS/#robloxecs","text":"An Entity-Component-System framework I created for Roblox. The code can be found here . Using tags/CollectionService I allow Roblox objects to be assigned with componenets. This framework was designed to be minimalistic, fast and easy to use. I stopped work on it due to other commitments. Here I demonstrate it's ability to reload code during live gameplay, enabling rapid code testing and debugging.","title":"RobloxECS"},{"location":"neuro/","text":"Neuro Me and Jobro13 made a neural networking library together in 2014. The code for this project can be found here . This is a video I made showing it working inside Roblox!","title":"Neuro"},{"location":"neuro/#neuro","text":"Me and Jobro13 made a neural networking library together in 2014. The code for this project can be found here . This is a video I made showing it working inside Roblox!","title":"Neuro"},{"location":"pioneers/","text":"Pioneers My current and most ambitious project, boasting multiple platform first features. Pioneers is a real time strategy game except with persistent civilisation state seen in games like Clash of Clans. Unlike Clash of Clans there is one world where every player builds their civilsation, as opposed to each civilisation being in their own isolated instance. Players can see every civilisation and interact with them in real time, including watching battles between other players. To achieve this Pioneers is powered by a custom backend which synchronises the game across all Roblox servers entirely removing the concept of being in seperate servers. Pioneers is a solo project, I have made every asset in the game with the only exceptions being sound (which is either licensed or public domain) and humanoid models (which are from Roblox). Gameplay Promises Being powered by a custom backend, Pioneers can make some bold promises: Build your civilisation as big as you want Control an unlimited number of villagers Take part in huge scale battles involving 1000s of units Compete with every player in real time Exploits are impossible Explore a world larger than any seen on Roblox Development Video This video documents the development process with emphasis on demonstrating technical features and an example of following agile principles by making a minimum viable product then iterating. Currently unfinished and will be updated when Pioneers is more complete. Cross-Server Replication/Synchronisation Players will also be replicated across servers. Dynamic World Streaming Usually the view distance is 30 but here it is set to 5 to exagerate the streaming. When units are out of view distance they are cheaply updated to keep performance up, even on low end devices. View distance can be changed by the player to suit their preference. Roblox servers only fetch objects in partitions which players can see (partitions are sections of the world, similar to chunks in Minecraft) so they don't need to load the entire world. High Performance Pioneers has been carefully optimised every step of the way ensuring smooth gameplay. It has a small memory footprint, low cpu usage and uses minimal network bandwidth. Strong Backend Architecture The backend is hosted on Google Cloud Platform and uses Nodejs with Redis. It is designed to be completely fault tolerant and scalable to withstand the demanding nature of Roblox. The API can be queried at https://api.mysty.dev although it will reject any request without a valid api key. Data is efficiently stored to reduce Redis operations and maintain low network overhead, primarily via the use of caches. Live updates Updates can incrementally rollout across api or compute nodes while still maintaining live gameplay. With multiple nodes and an incremental rollout users won't even be able to tell the game is updating. And more Those are just the most significant features currently implemented and Pioneers has many more features planned such as clan vs clan battles! Due to the focus on making a solid underlying framework gameplay is still largely unintuitive and incomplete however it is currently live and can be tested out using the link below. Improved user on-boarding and goals to guide players are what is currently being worked on. Play Pioneers View the project repository","title":"Pioneers"},{"location":"pioneers/#pioneers","text":"My current and most ambitious project, boasting multiple platform first features. Pioneers is a real time strategy game except with persistent civilisation state seen in games like Clash of Clans. Unlike Clash of Clans there is one world where every player builds their civilsation, as opposed to each civilisation being in their own isolated instance. Players can see every civilisation and interact with them in real time, including watching battles between other players. To achieve this Pioneers is powered by a custom backend which synchronises the game across all Roblox servers entirely removing the concept of being in seperate servers. Pioneers is a solo project, I have made every asset in the game with the only exceptions being sound (which is either licensed or public domain) and humanoid models (which are from Roblox).","title":"Pioneers"},{"location":"pioneers/#gameplay-promises","text":"Being powered by a custom backend, Pioneers can make some bold promises: Build your civilisation as big as you want Control an unlimited number of villagers Take part in huge scale battles involving 1000s of units Compete with every player in real time Exploits are impossible Explore a world larger than any seen on Roblox","title":"Gameplay Promises"},{"location":"pioneers/#development-video","text":"This video documents the development process with emphasis on demonstrating technical features and an example of following agile principles by making a minimum viable product then iterating. Currently unfinished and will be updated when Pioneers is more complete.","title":"Development Video"},{"location":"pioneers/#cross-server-replicationsynchronisation","text":"Players will also be replicated across servers.","title":"Cross-Server Replication/Synchronisation"},{"location":"pioneers/#dynamic-world-streaming","text":"Usually the view distance is 30 but here it is set to 5 to exagerate the streaming. When units are out of view distance they are cheaply updated to keep performance up, even on low end devices. View distance can be changed by the player to suit their preference. Roblox servers only fetch objects in partitions which players can see (partitions are sections of the world, similar to chunks in Minecraft) so they don't need to load the entire world.","title":"Dynamic World Streaming"},{"location":"pioneers/#high-performance","text":"Pioneers has been carefully optimised every step of the way ensuring smooth gameplay. It has a small memory footprint, low cpu usage and uses minimal network bandwidth.","title":"High Performance"},{"location":"pioneers/#strong-backend-architecture","text":"The backend is hosted on Google Cloud Platform and uses Nodejs with Redis. It is designed to be completely fault tolerant and scalable to withstand the demanding nature of Roblox. The API can be queried at https://api.mysty.dev although it will reject any request without a valid api key. Data is efficiently stored to reduce Redis operations and maintain low network overhead, primarily via the use of caches.","title":"Strong Backend Architecture"},{"location":"pioneers/#live-updates","text":"Updates can incrementally rollout across api or compute nodes while still maintaining live gameplay. With multiple nodes and an incremental rollout users won't even be able to tell the game is updating.","title":"Live updates"},{"location":"pioneers/#and-more","text":"Those are just the most significant features currently implemented and Pioneers has many more features planned such as clan vs clan battles! Due to the focus on making a solid underlying framework gameplay is still largely unintuitive and incomplete however it is currently live and can be tested out using the link below. Improved user on-boarding and goals to guide players are what is currently being worked on. Play Pioneers View the project repository","title":"And more"},{"location":"robotics/","text":"Robotics During my final year at college I got involved with the robotics club. We built an autonomous robot to compete at Student Robotics 2017, a competiton hosted by the University of Southampton. I was the lead programmer and did the entirety of the programming. We managed to place 3rd earning us the chance to be picked to represent the UK in the inaugural FIRST Global competition. After demonstrating our commitment to persue this we were picked and I became the team captain for the UK robotics team. Here is a video showing our Robot, NooNoo, in action at SR2017. It demonstrates the robot's ability to autonomously overcome unexpected conditions (we are not allowed to interact with the robot after the round starts). The code for NooNoo can be found here . This video was our application to be chosen as the UK team for FIRST Global.","title":"Robotics"},{"location":"robotics/#robotics","text":"During my final year at college I got involved with the robotics club. We built an autonomous robot to compete at Student Robotics 2017, a competiton hosted by the University of Southampton. I was the lead programmer and did the entirety of the programming. We managed to place 3rd earning us the chance to be picked to represent the UK in the inaugural FIRST Global competition. After demonstrating our commitment to persue this we were picked and I became the team captain for the UK robotics team. Here is a video showing our Robot, NooNoo, in action at SR2017. It demonstrates the robot's ability to autonomously overcome unexpected conditions (we are not allowed to interact with the robot after the round starts). The code for NooNoo can be found here . This video was our application to be chosen as the UK team for FIRST Global.","title":"Robotics"}]}